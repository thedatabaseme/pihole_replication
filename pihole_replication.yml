---

- hosts: "{{ HOSTS | default ('all') }}"
  vars:
    pihole_home: '/etc/pihole/'
    pihole_gravity_db: '{{ pihole_home }}gravity.db'
    pihole_customlist: '{{ pihole_home }}custom.list'
    pihole_adlist: '{{ pihole_home }}adlist.csv'
    pihole_domainlist: '{{ pihole_home }}domainlist.csv'
    dnsmasq_home: '/etc/dnsmasq.d/'
    dnsmasq_cnamelist: '{{ dnsmasq_home }}05-pihole-custom-cname.conf'
    pihole_user: pihole
    pihole_group: pihole
  tasks:

  - name: Generate AdList
    shell: 'sqlite3 {{ pihole_gravity_db }} -header -csv "select * from adlist" > {{ pihole_adlist }}'
    become: true
  
  - name: Generate Domainlist
    shell: 'sqlite3 {{ pihole_gravity_db }} -header -csv "select * from domainlist" > {{ pihole_domainlist }}'
    become: true

  - name: Fetch all Files to localhost
    fetch:
      src: "{{ item }}"
      dest: "/tmp{{ item }}"
      fail_on_missing: false
      flat: true
    become: true
    loop:
      - pihole_adlist
      - pihole_domainlist
      - pihole_customlist
      - dnsmasq_cnamelist

  - name: Stopping piHole on Target Host {{ pihole_target_host }}
    service:
      name: pihole-FTL
      state: stopped
    become: true
    delegate_to: "{{ pihole_target_host }}"

  - name: Copy all Files to Target Host {{ pihole_target_host }}
    copy:
      src: "/tmp{{ item }}"
      dest: "{{ item }}"
      owner: "{{ pihole_user }}"
      group: "{{ pihole_group }}"
      mode: 0664
    become: true
    delegate_to: "{{ pihole_target_host }}"
    loop:
      - pihole_adlist
      - pihole_domainlist
      - pihole_customlist
      - dnsmasq_cnamelist

  - name: Drop Table AdList
    shell: 'sqlite3 {{ pihole_gravity_db }} "DROP TABLE adlist;'
    become: true
    delegate_to: "{{ pihole_target_host }}"
    
  - name: Drop Table Domainlist
    shell: 'sqlite3 {{ pihole_gravity_db }} "DROP TABLE domainlist;'
    become: true
    delegate_to: "{{ pihole_target_host }}"

  - name: Import Table AdList
    shell: 'sqlite3 {{ pihole_gravity_db }} ".import {{ pihole_adlist }} adlist'
    become: true
    delegate_to: "{{ pihole_target_host }}"

  - name: Import Table Domainlist
    shell: 'sqlite3 {{ pihole_gravity_db }} ".import {{ pihole_domainlist }} domainlist'
    become: true
    delegate_to: "{{ pihole_target_host }}"

  - name: Starting pioHole on Target Host {{ pihole_target_host }}
    shell: "pihole -g"
    become: true
    delegate_to: "{{ pihole_target_host }}"